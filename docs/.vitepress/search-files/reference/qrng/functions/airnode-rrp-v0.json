{
  "id": 0,
  "distPath": "docs/.vitepress/dist/reference/qrng/functions/airnode-rrp-v0.html",
  "indexPath": "docs/.vitepress/search-files/reference/qrng/functions/airnode-rrp-v0.json",
  "docSet": "/reference/qrng/functions/",
  "url": "/reference/qrng/functions/airnode-rrp-v0.html",
  "content": "[ Skip to content ] (#VPContent)  [![image] (/./api3-inactive.png)![image] (/./API3-Active.png)Documentation] (/)  Main Navigation [Home] (/) [Explore] (/explore/) [Guides] (/guides/)  Reference [dAPIs] (/reference/dapis/)  [Airnode] (/reference/airnode/latest/)  [ChainAPI] (/reference/chainapi/)  [OIS] (/reference/ois/latest/)  [QRNG] (/reference/qrng/)  [DAO Members] (/reference/dao-members/)  üîç  [GitHub] (https://github.com/api3dao/api3-docs) [Discord] (https://discord.com/channels/758003776174030948/765618225144266793)  Appearance [GitHub] (https://github.com/api3dao/api3-docs) [Discord] (https://discord.com/channels/758003776174030948/765618225144266793)  Menu [ Return to top ] (#)  üìÇ  Sidebar Navigation  [Understanding QRNG] (/reference/qrng/) [Chains] (/reference/qrng/chains.html) [API Providers] (/reference/qrng/providers.html) [QrngExample.sol] (/reference/qrng/qrng-example.html) [RemixExample.sol] (/reference/qrng/remix-example.html) [‚òÖ Other Related Reading] (/reference/qrng/more.html)   Contracts and Functions -----------------------  [AirnodeRrpV0.sol] (/reference/qrng/functions/airnode-rrp-v0.html) [makeFullRequest()] (/reference/qrng/functions/make-full-request.html)  On this page Table of Contents for current page  üìÇ¬†Reference ‚Üí QRNG ‚Üí Contracts and Functions  AirnodeRrpV0.sol [#] (#frontmatter-title)  ============================================================================================  A requester (smart contract) uses the function makeFullRequest() from the [AirnodeRrpV0.sol] (https://github.com/api3dao/airnode/blob/master/packages/airnode-protocol/contracts/rrp/AirnodeRrpV0.sol) contract (by way of [RrpRequesterV0.sol] (https://github.com/api3dao/airnode/blob/master/packages/airnode-protocol/contracts/rrp/requesters/RrpRequesterV0.sol) ) to request, then receive, a quantum random number. The requester &quot;requests&quot; the quantum random number and gets a requestId in return. When the quantum random number is generated, it is fulfilled to a callback function in the requester. See [Understanding QRNG] (./../) .  makeFullRequest() [#] (#makefullrequest)  -------------------------------------------------------------------------------------------  solidityfunction makeRequestUint256() external { bytes32 requestId = airnodeRrp.makeFullRequest( airnode, endpointIdUint256, address(this), sponsorWallet, address(this), this.fulfillUint256.selector, &quot;&quot; ); expectingRequestWithIdToBeFulfilled[requestId] = true; emit RequestedUint256(requestId); }  1 2 3 4 5 6 7 8 9 10 11 12 13 ---airnode, ---endpointIdUint256, ---address(this), ---sponsorWallet, ---address(this), ---this.fulfillUint256.selector, ---&quot;&quot;  sponsorWallet [#] (#sponsorwallet)  -------------------------------------------------------------------------------------  [Previous page‚òÖ Other Related Reading] (/reference/qrng/more.html)  [Next pagemakeFullRequest()] (/reference/qrng/functions/make-full-request.html)  Released under the MIT License. Copyright ¬© 2019-present API3 "
}
