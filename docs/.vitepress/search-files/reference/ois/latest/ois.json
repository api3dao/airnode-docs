{"id":121,"distPath":"docs/.vitepress/dist/reference/ois/latest/ois.html","indexPath":"docs/.vitepress/search-files/reference/ois/latest/ois.json","docSet":"/reference/ois/latest/","url":"/reference/ois/latest/ois.html","content":"  ðŸ“‚Â Reference â†’ OIS â†’ v1.2  Specification [#] (#frontmatter-title)  ====  The Oracle Integration Specification (OIS) is based on [Open API specification (OAS)] (https://swagger.io/specification/) , but there are some differences, be sure to focus on the following documentation when working on an OIS file. OAS It is not recommended to refer to OAS for help while creating an OIS object. OIS only borrows formatting practices from OAS. Everything needed to create an OIS object is in these docs. See the article [Setting Oracle Integration Standards] (https://medium.com/api3/setting-oracle-integration-standards-ac9104c38f9e) for an overview of OIS. ---Fields denoted by (*) are for documentation purposes and not used by an Airnode. --- The OIS fields should be reviewed and customized by the integrating party. ---All URLs are absolute (i.e., [relative URLs] (https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#relative-references-in-urls) are not supported).  OIS Object Summary [#] (#ois-object-summary)    An OIS has five root fields (keys). 1-- [oisFormat] (./ois.html#_1-oisformat)  2-- [title] (./ois.html#_2-title)  3-- [version] (./ois.html#_3-version)  4-- [apiSpecifications] (./ois.html#_4-apispecifications)  5-- [endpoints] (./ois.html#_5-endpoints)  apiSpecifications describe the API&#39;s operations which are mapped to the endpoints that Airnode exposes on-chain. json{ &quot;oisFormat&quot;: &quot;1.1.1&quot;, &quot;title&quot;: &quot;myOisTitle&quot;, &quot;version&quot;: &quot;1.2.3&quot;, &quot;apiSpecifications&quot;: { ... }, &quot;endpoints&quot;: [ ... ] }  1 2 3 4 5 6 7 8 9 10 11  1. oisFormat [#] (#_1-oisformat)  ---  (Required) The OIS format version followed while generating the specifications. Be sure to use the correct OIS version for the Airnode version you are deploying. Airnode versionLatest compatible OIS version 0.2.x through 0.7.x [1.0.0 âžš ] (https://github.com/api3dao/ois/tree/v1.0.0)  0.8.x [1.1.2 âžš ] (https://github.com/api3dao/ois/tree/v1.1.2)  0.9.x [1.2.0 âžš ] (https://github.com/api3dao/ois/tree/v1.2.0)   2. title [#] (#_2-title)    (Required) The OIS title. Title field is at most 64 characters, can only include alphanumeric characters, hyphens, underscores and whitespaces.  3. version [#] (#_3-version)  ----  (Required) A user defined version for the OIS object. Not to be confused with the oisFormat version which defines an OIS formatting version.  4. apiSpecifications [#] (#_4-apispecifications)  ----  (Required) An object specifying the API with the following root level fields: ---4.1. [servers] (./ois.html#_4-1-servers)  ---4.2. [paths] (./ois.html#_4-2-paths)  ---4.3. [components] (./ois.html#_4-3-components)  ---4.4. [security] (./ois.html#_4-4-security)  json// apiSpecifications { &quot;servers&quot;: [ { &quot;url&quot;: &quot;https://myapi.com/api/v1&quot; } ], &quot;paths&quot;: { &quot;/myPath&quot;: { &quot;get&quot;: { &quot;parameters&quot;: [ { &quot;name&quot;: &quot;myParameter&quot;, &quot;in&quot;: &quot;query&quot; } ] } } }, &quot;components&quot;: { &quot;securitySchemes&quot;: { &quot;mySecurityScheme1&quot;: { &quot;type&quot;: &quot;apiKey&quot;, &quot;name&quot;: &quot;X-MY-API-KEY&quot;, &quot;in&quot;: &quot;query&quot; } } }, &quot;security&quot;: { &quot;mySecurityScheme1&quot;: [] } }  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  4.1. servers [#] (#_4-1-servers)   (Required) An array of objects containing the base URL of the API. Only one object (i.e., base URL) is allowed in the array. Applies to all API operations.  4.2. paths [#] (#_4-2-paths)   (Required) An object where an API&#39;s operations are defined by {path}.{method} (i.e. paths./myPath.get) each with a parameters array.  4.2.1. parameters [#] (#_4-2-1-parameters)   (Required) A list of the API operation&#39;s parameters, each with the following fields: ---name ---in  4.2.1.1. name [#] (#_4-2-1-1-name)   (Required) The name of the parameter.  4.2.1.2. in [#] (#_4-2-1-2-in)   (Required) The location of the parameter. When integrating a POST method, define the body parameters with in: query. Airnode will convert all query types into the requestBody. Note that only the non-nested application/json content-type is supported. Allowed values: query, header, path, cookie.  4.3. components [#] (#_4-3-components)   [![info] (/img/info-blue-20.png)] (./../../airnode/latest/understand/api-security.html) (Required) An object where security schemes can be found under securitySchemes.{securitySchemeName} with the following elements: ---type ---name ---in ---scheme  4.3.1. type [#] (#_4-3-1-type)   (Required) The type of the security scheme. Allowed values: ---Used by an API operation to authenticate Airnode.  -apiKey -http ---Allows an API operation to acquire information about the requester and/or the chain.  -relayRequesterAddress -relaySponsorAddress -relaySponsorWalletAddress -relayChainId -relayChainType -relayRequestId  4.3.2. name [#] (#_4-3-2-name)   (Only if type is apiKey) The name of the security scheme variable.  4.3.3. in [#] (#_4-3-3-in)   (Only if type is apiKey) The location of the security scheme variable. Allowed values: query, header, cookie  4.3.4. scheme [#] (#_4-3-4-scheme)   (Only if type is http) The name of the HTTP Authorization scheme to be used in the [Authorization header as defined in RFC7235] (https://tools.ietf.org/html/rfc7235#section-5.1) . Allowed values: (basic and bearer). json&quot;mySecurityScheme2&quot;: { &quot;type&quot;: &quot;http&quot;, &quot;scheme&quot;: &quot;bearer&quot; }  1 2 3 4  4.4. security [#] (#_4-4-security)   (Required) An object containing all security schemes required by an API call. Applies to all operations. A security scheme can contain information required by the API to authenticate Airnode as well as information about the requester (relay information) the API may also require. Read more about security schemes in the [API Security] (./../../airnode/latest/understand//api-security.html) section of the Build an Airnode guide and the [Airnode Authentication] (./../../airnode/v0.7/concepts/airnode-auth.html) section of Concepts and Definitions. The security object maintains the names of all the security schemes used. Each security scheme in security maps to an empty list. The empty list will be used by future versions of Airnode for individual endpoint authentication. The components.securitySchemes.{name} object defines the security schemes. Unlike OAS security is an object, not an array. json// OIS object &quot;components&quot;: { &quot;securitySchemes&quot;: { &quot;my-api-key-scheme&quot;: { &quot;in&quot;: &quot;query&quot;, &quot;type&quot;: &quot;apiKey&quot;, &quot;name&quot;: &quot;access_key&quot; &quot;scheme&quot;: &quot;&lt;FILL_*&gt;&quot; // Used when type=&quot;http&quot;. } } }, &quot;security&quot;: { &quot;my-api-key-scheme&quot;: [] }  1 2 3 4 5 6 7 8 9 10 11 12 13 14 The apiCredential object (which is not part of the OIS object) holds credentials needed by the security scheme if any. json// config.json root object. // Not part of the OIS object. &quot;apiCredentials&quot;: [ { &quot;oisTitle&quot;: &quot;my-ois-title&quot;, // Must match the ois.title field the security scheme is in. &quot;securitySchemeName&quot;: &quot;my-api-key-scheme&quot;, &quot;securitySchemeValue&quot;: &quot;${API_KEY}&quot; // In secrets.env } ]  1 2 3 4 5 6 7 8 9 Please note: Currently Airnode reads the security schemes from component.securitySchemes and not security. Using the security field now (in conjunction with component.securitySchemes) provides for a smooth transition to future releases of Airnode with regards to security scheme implementation. This will allow assigning of security schemes to individual API operations. Currently security schemes are assign to the entire API.  5. endpoints [#] (#_5-endpoints)  ---  (Required) A list of objects, each specifying an Airnode endpoint with the following fields: Please Note Fields denoted by * are for documentation purposes and not used by Airnode node. ---5.1. [name] (./ois.html#_5-1-name)  ---5.2. [operation] (./ois.html#_5-2-operation)  ---5.3. [fixedOperationParameters] (./ois.html#_5-3-fixedoperationparameters)  ---5.4. [reservedParameters] (./ois.html#_5-4-reservedparameters)  ---5.5. [parameters] (./ois.html#_5-5-parameters)  ---5.6. [summary *] (./ois.html#_5-6-summary)  ---5.7. [description *] (./ois.html#_5-7-description)  ---5.8. [externalDocs *] (./ois.html#_5-8-externaldocs)  ---5.9. [preProcessingSpecifications] (./ois.html#_5-9-preprocessingspecifications)  ---5.10. [postProcessingSpecifications] (./ois.html#_5-10-postprocessingspecifications)  json// endpoints [ { &quot;name&quot;: &quot;convertToUsd&quot;, &quot;operation&quot;: { &quot;path&quot;: &quot;/myPath&quot;, &quot;method&quot;: &quot;get&quot; }, &quot;fixedOperationParameters&quot;: [ { &quot;operationParameter&quot;: { &quot;name&quot;: &quot;to&quot;, &quot;in&quot;: &quot;query&quot; }, &quot;value&quot;: &quot;USD&quot; } ], &quot;reservedParameters&quot;: [ { &quot;name&quot;: &quot;_type&quot;, &quot;fixed&quot;: &quot;int256&quot; }, { &quot;name&quot;: &quot;_path&quot;, &quot;default&quot;: &quot;data.0.price&quot; }, { &quot;name&quot;: &quot;_times&quot; } ], &quot;parameters&quot;: [ { &quot;name&quot;: &quot;from&quot;, &quot;default&quot;: &quot;EUR&quot;, &quot;operationParameter&quot;: { &quot;name&quot;: &quot;from&quot;, &quot;in&quot;: &quot;query&quot; } } ], &quot;preProcessingSpecifications&quot;: [ { &quot;environment&quot;: &quot;Node 14&quot;, &quot;value&quot;: &quot;const output = {...input, from: \\&quot;eth\\&quot;};&quot;, &quot;timeoutMs&quot;: &quot;5000&quot; }, { &quot;environment&quot;: &quot;Node 14&quot;, &quot;value&quot;: &quot;const output = {...input, from: input.from.toUpperCase()};&quot;, &quot;timeoutMs&quot;: &quot;5000&quot; } ], &quot;postProcessingSpecifications&quot;: [ { &quot;environment&quot;: &quot;Node 14&quot;, &quot;value&quot;: &quot;const output = Math.round(input.price * 1000);&quot;, &quot;timeoutMs&quot;: &quot;5000&quot; } ] } ]  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61  5.1. name [#] (#_5-1-name)   (Required) The name of the Airnode endpoint, must be unique in OIS.  5.2. operation [#] (#_5-2-operation)   (Required) An object that refers to an API operation defined in apiSpecifications.paths, has the following elements: ---path ---method  5.2.1. path [#] (#_5-2-1-path)   (Required) The path of the API operation.  5.2.2. method [#] (#_5-2-2-method)   (Required) The method of the API operation. Allowed values: get, post  5.3. fixedOperationParameters [#] (#_5-3-fixedoperationparameters)   [![info] (/img/info-blue-20.png)] (./../../airnode/latest/understand/api-integration.html#fixedoperationparameters) (Required) A list of objects specifying the fixed parameters for an API operation. While required, the fixedOperationParameters array can be left empty. Each object has the following elements: ---operationParameter ---value  5.3.1. operationParameter [#] (#_5-3-1-operationparameter)   (Required) An object that refers to a parameter of an API operation with the following elements: ---name ---in  5.3.1.1. name [#] (#_5-3-1-1-name)   The name of the API operation&#39;s parameter that will have a fixed value.  5.3.1.2. in [#] (#_5-3-1-2-in)   Must be one of three possible values (query, header, path, cookie).  5.3.2. value [#] (#_5-3-2-value)   (Required) The value to be used for the respective parameter of an API operation that cannot be overridden by the requester.  5.4. reservedParameters [#] (#_5-4-reservedparameters)   [![info] (/img/info-blue-20.png)] (./../../airnode/latest/understand/api-integration.html#reservedparameters)  A list of objects that specify reserved Airnode endpoint parameters that do not map to any API operation parameters, but are used for special purposes by the Airnode. See the [Reserved Parameters] (./reserved-parameters.html) doc for an in-depth explanation. Each object has the following elements: ---name ---fixed ---default  5.4.1. name [#] (#_5-4-1-name)   (Required) The name of the reserved parameter. Always starts with _. Allowed values: _type, _path or _times  5.4.2. fixed [#] (#_5-4-2-fixed)   (Optional) The fixed (i.e., non-overridable) value for the reserved parameter. If fixed is used, default has no effect and should not be used.  5.4.3. default [#] (#_5-4-3-default)   (Optional) The default value for the reserved parameter. Used when no value is provided. If default is used, fixed must not be used because it would override the default value.  5.5. parameters [#] (#_5-5-parameters)   [![info] (/img/info-blue-20.png)] (./../../airnode/latest/understand/api-integration.html#parameters) (Optional) A list of objects that specify Airnode endpoint parameters that map to an particular API operation&#39;s parameters. Each object has the following elements: ---operationParameter ---name ---default ---description * ---require ---example  5.5.1. operationParameter [#] (#_5-5-1-operationparameter)   (Required) An object that refers to a parameter of an API operation, has the following elements: ---name ---in  5.5.1.1. name [#] (#_5-5-1-1-name)   The name of the parameter from an API operation.  5.5.1.2. in [#] (#_5-5-1-2-in)   Must be one of four possible values (query, header, path, cookie).  5.5.2. name [#] (#_5-5-2-name)   (Required) The name of the Airnode endpoint parameter. Is not allowed to start with _.  5.5.3. default [#] (#_5-5-3-default)   (Optional) The default value for the Airnode endpoint parameter. Used when no value is provided.  5.5.4. description * [#] (#_5-5-4-description)   (Optional) A description of what the Airnode endpoint parameter does.  5.5.5. required [#] (#_5-5-5-required)   (Optional) If the Airnode endpoint parameter is required, a boolean value.  5.5.6. example * [#] (#_5-5-6-example)   (Optional) The example value to be used in test calls.  5.6. summary * [#] (#_5-6-summary)   (Optional) A one sentence summary of what the Airnode endpoint does.  5.7. description * [#] (#_5-7-description)   (Optional) A more detailed description of what the Airnode endpoint does.  5.8. externalDocs * [#] (#_5-8-externaldocs)   (Optional) URL to external documentation for the Airnode endpoint.  5.9. preProcessingSpecifications * [#] (#_5-9-preprocessingspecifications)   (Optional) Defines the preprocessing code that can be used to modify the endpoint parameter before making the API request defined by an Airnode endpoint. See the [Pre/Post Processing] (./processing.html) doc for additional details.  Example [#] (#example)   json&quot;preProcessingSpecifications&quot;: [ { // Execute synchronously in Node.js version 14 &quot;environment&quot;: &quot;Node 14&quot;, // Define a new &quot;from&quot; parameter with value &quot;eth&quot; &quot;value&quot;: &quot;const output = {...input, from: \\&quot;eth\\&quot;};&quot;, // Run for 5 seconds maximum &quot;timeoutMs&quot;: &quot;5000&quot; }, { // Execute synchronously in Node.js version 14 &quot;environment&quot;: &quot;Node 14&quot;, // Uppercase the &quot;from&quot; parameter defined by the previous snippet &quot;value&quot;: &quot;const output = {...input, from: input.from.toUpperCase()};&quot;, // Run for 5 seconds maximum &quot;timeoutMs&quot;: &quot;5000&quot; } ]  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  5.10. postProcessingSpecifications * [#] (#_5-10-postprocessingspecifications)   (Optional) Defines the post-processing code that can be used to modify the API response from the request defined by an Airnode endpoint. See the [Pre/Post Processing] (./processing.html) doc for additional details.  Example [#] (#example-1)   json&quot;postProcessingSpecifications&quot;: [ { // Execute synchronously in Node.js version 14 &quot;environment&quot;: &quot;Node 14&quot;, // Multiply the API return value by 1000 and round it to an integer &quot;value&quot;: &quot;const output = Math.round(input.price * 1000);&quot;, // Run for 5 seconds maximum &quot;timeoutMs&quot;: &quot;5000&quot; } ]  1 2 3 4 5 6 7 8 9 10 [Previous pageUnderstanding OIS] (/reference/ois/latest/)  [Next pageReserved Parameter] (/reference/ois/latest/reserved-parameters.html)  "}