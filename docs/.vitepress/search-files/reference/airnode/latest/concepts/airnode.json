{
  "id": 0,
  "distPath": "docs/.vitepress/dist/reference/airnode/latest/concepts/airnode.html",
  "indexPath": "docs/.vitepress/search-files/reference/airnode/latest/concepts/airnode.json",
  "docSet": "/reference/airnode/latest/",
  "url": "/reference/airnode/latest/concepts/airnode.html",
  "content": "[ Skip to content ] (#VPContent)  [![image] (/./api3-inactive.png)![image] (/./API3-Active.png)Documentation] (/)  Main Navigation [Home] (/) [Explore] (/explore/) [Guides] (/guides/)  Reference [dAPIs] (/reference/dapis/)  [Airnode] (/reference/airnode/latest/)  [ChainAPI] (/reference/chainapi/)  [OIS] (/reference/ois/latest/)  [QRNG] (/reference/qrng/)  [DAO Members] (/reference/dao-members/)  üîç  [GitHub] (https://github.com/api3dao/api3-docs) [Discord] (https://discord.com/channels/758003776174030948/765618225144266793)  Appearance [GitHub] (https://github.com/api3dao/api3-docs) [Discord] (https://discord.com/channels/758003776174030948/765618225144266793)  Menu [ Return to top ] (#)  üìÇ  Sidebar Navigation  [Versions] (/reference/airnode/latest/) [Airnode Contract Addresses] (/reference/airnode/latest/airnode-addresses.html) [Cloud Resources] (/reference/airnode/latest/cloud-resources.html) [Chain Idiosyncrasies] (/reference/airnode/latest/chain-idiosyncrasies.html) [Migration Guide] (/reference/airnode/latest/migration.html)   Understanding Airnode ---------------------  [Overview] (/reference/airnode/latest/understand/) [API Integration] (/reference/airnode/latest/understand/api-integration.html) [API Security] (/reference/airnode/latest/understand/api-security.html) [Configuring Airnode] (/reference/airnode/latest/understand/configuring.html) [Using Authorizers] (/reference/airnode/latest/understand/apply-auth.html) [Using Authorizations] (/reference/airnode/latest/understand/using-authorizations.html) [Heartbeat] (/reference/airnode/latest/understand/heartbeat.html) [HTTP Gateways] (/reference/airnode/latest/understand/http-gateways.html) [Deploying Airnode] (/reference/airnode/latest/understand/deploying.html)   Docker Images -------------  [Overview] (/reference/airnode/latest/docker/) [AWS/GCP Deployer Image] (/reference/airnode/latest/docker/deployer-image.html) [Client Image] (/reference/airnode/latest/docker/client-image.html) [Admin CLI Image] (/reference/airnode/latest/docker/admin-cli-image.html)   Concepts and Definitions ------------------------  [Request-Response Protocol] (/reference/airnode/latest/concepts/) [Airnode] (/reference/airnode/latest/concepts/airnode.html) [Endpoint] (/reference/airnode/latest/concepts/endpoint.html) [Authorizers] (/reference/airnode/latest/concepts/authorizers.html) [Authorizations] (/reference/airnode/latest/concepts/authorizations.html) [Airnode Authentication] (/reference/airnode/latest/concepts/airnode-auth.html) [Relayed Meta Data Authentication] (/reference/airnode/latest/concepts/relay-meta-auth.html) [Requester] (/reference/airnode/latest/concepts/requester.html) [Sponsor] (/reference/airnode/latest/concepts/sponsor.html) [Requests and Sponsors] (/reference/airnode/latest/concepts/requesters-sponsors.html) [Template] (/reference/airnode/latest/concepts/template.html) [Request] (/reference/airnode/latest/concepts/request.html) [Chain Providers] (/reference/airnode/latest/concepts/chain-providers.html) [Gas Price Strategies] (/reference/airnode/latest/concepts/gas-prices.html) [Fees] (/reference/airnode/latest/concepts/fees.html)   Specifications --------------  [Oracle Integration (OIS)] (/reference/airnode/latest/specifications/ois.html) [Airnode ABI] (/reference/airnode/latest/specifications/airnode-abi.html) [Reserved Parameters] (/reference/airnode/latest/specifications/reserved-parameters.html)   Packages --------  [Overview] (/reference/airnode/latest/packages/) [Adapter] (/reference/airnode/latest/packages/adapter.html) [Airnode ABI] (/reference/airnode/latest/packages/airnode-abi.html) [Admin CLI] (/reference/airnode/latest/packages/admin-cli.html) [Deployer] (/reference/airnode/latest/packages/deployer.html) [Validator] (/reference/airnode/latest/packages/validator.html)   Deployment Files ----------------  [Overview] (/reference/airnode/latest/deployment-files/) [config.json] (/reference/airnode/latest/deployment-files/config-json.html) [secrets.env] (/reference/airnode/latest/deployment-files/secrets-env.html) [aws.env] (/reference/airnode/latest/deployment-files/aws-env.html) [receipt.json] (/reference/airnode/latest/deployment-files/receipt-json.html) Examples [config.json] (/reference/airnode/latest/deployment-files/examples/config-json.html) [secrets.env] (/reference/airnode/latest/deployment-files/examples/secrets-env.html) [aws.env] (/reference/airnode/latest/deployment-files/examples/aws-env.html) Templates [OIS Object] (/reference/airnode/latest/deployment-files/templates/ois-json.html) [config.json] (/reference/airnode/latest/deployment-files/templates/config-json.html) [secrets.env] (/reference/airnode/latest/deployment-files/templates/secrets-env.html) [aws.env] (/reference/airnode/latest/deployment-files/templates/aws-env.html) [gcp.json] (/reference/airnode/latest/deployment-files/templates/gcp-json.html)  On this page Table of Contents for current page  üìÇ¬†Reference ‚Üí Airnode ‚Üí v1.0 ‚Üí Concepts and Definitions  Airnode [#] (#frontmatter-title)  ===================================================================================  WARNING This doc has been altered for v1.0. Do not overwrite when converting the latest v0.x relase to the new docs. Airnode is a serverless oracle node implemented with a &quot;set and forget&quot; [philosophy] (./../grp-providers/airnode/design-philosophy.html) . TODO: Add the new component that speaks to Airnode as a data source for both RRP and dAPIs.  Airnode processes RRP requests [#] (#airnode-processes-rrp-requests)  -----------------------------------------------------------------------------------------------------------------------  An Airnode is capable of serving one or more APIs to [requesters] (./requester.html) (which are on-chain smart contracts) that request data served by a particular Airnode. The AirnodeRrpV0 protocol is designed to be flexible and is meant to serve a variety of use cases. See the Airnode [requester examples] (https://github.com/api3dao/airnode/tree/v0.8/packages/airnode-examples/contracts) ‚ûö for potential design patterns. Airnode consists of two parts: the off-chain Airnode (a.k.a. &quot;the node&quot;) deployed as self hosted or cloud provider functions, e.g., AWS) and the on-chain protocol contract AirnodeRrpV0.sol. A requester calls the protocol contract, which emits a blockchain event with the request parameters. Airnode listens to the events emitted by the AirnodeRrpV0 contract. During the next run cycle, Airnode gets the request parameters from the emitted event. The diagram below illustrates the mechanics of the entire process. Ignoring the mechanics of the overall process, the requester calling an Airnode primarily focuses on two tasks, indicated by points A &amp; B in the diagram below. ---1: Make the request ---2: Accept and decode the response ![image] (/assets/call-an-airnode.f583cfc0.png) A requester makes a request to the AirnodeRrpV0 contract which adds the requestId to storage, emits the request to the event logs and returns the requestId to the requester. The request is retrieved by the Airnode during its next run cycle. It then verifies the requester is authorized by checking authorizer contracts assigned to the Airnode. If the request is authorized, Airnode proceeds to respond. It first gathers the requested data from the API and calls the fulfill() function in AirnodeRrpV0, which removes the pending requestId from storage and makes a callback to myFulfill(). The gas costs associated with the response are covered by the sponsor of the requester.  Airnode sources data for dAPIs [#] (#airnode-sources-data-for-dapis)  -----------------------------------------------------------------------------------------------------------------------  An Airnode also supplies the data, as datafeeds, to Beacons which are the underlying data source for dAPIs. TODO: More content needed here. Something that starts like this: Airnode has an attached mechanism the looks for a deviation it the value of its endpoints which point to an API provider&#39;s API operations. This mechanism updates beacons that are the source of data for all dAPIs.  mnemonic [#] (#mnemonic)  ---------------------------------------------------------------------------  Each and every Airnode has a unique mnemonic identifying its wallet. This mnemonic is kept secret and Airnode is publicly identified using the default [address] (./airnode.html#airnodeaddress) derived from the mnemonic.  airnodeAddress [#] (#airnodeaddress)  ---------------------------------------------------------------------------------------  An Airnode is identified by the default address of a BIP 44 wallet (with the path m/44&#39;/60&#39;/0&#39;/0/0) which is referred to as the airnodeAddress. This address is same for all chains on which Airnode operates. The wallet mnemonic is specified in the [secrets.env] (./../reference/deployment-files/secrets-env.html) file when deploying the Airnode. Use the admin CLI command [derive-airnode-address] (./../reference/packages/admin-cli.html#derive-airnode-address) to derive the airnodeAddress from the mnemonic for informational purposes. bashnpx @api3/airnode-admin derive-airnode-address \\ --airnode-mnemonic &quot;cricket elephant ...&quot; # outputs Airnode address: 0xaBd9...  1 2 3 4 5  xpub [#] (#xpub)  -------------------------------------------------------------------  The Airnode owner announces the extended public key (xpub of the hardened derivation path m/44&#39;/60&#39;/0&#39;) off-chain. Then a sponsor derives a [sponsor wallet] (./sponsor.html#sponsorwallet) for the Airnode using the xpub and airnodeAddress. The sponsor wallet will then be used by the Airnode to fulfill requests made by the sponsor&#39;s contracts. Use the admin CLI command [derive-airnode-xpub] (./../reference/packages/admin-cli.html#derive-airnode-xpub) to get the xpub of an Airnode by passing the same mnemonic used to create the airnodeAddress. bashnpx @api3/airnode-admin derive-airnode-xpub \\ --airnode-mnemonic &quot;cricket elephant ...&quot; # outputs Airnode xpub: xpub6CUGRUo...  1 2 3 4 5  Admin CLI: generate-airnode-mnemonic [#] (#admin-cli-generate-airnode-mnemonic)  ----------------------------------------------------------------------------------------------------------------------------------  The [generate-airnode-mnemonic] (./../reference/packages/admin-cli.html#generate-airnode-mnemonic) command is useful because it will generate a mnemonic as well as return the airnodeAddress and xpub. shnpx @api3/airnode-admin generate-airnode-mnemonic # output This mnemonic is created locally on your machine using &quot;ethers.Wallet.createRandom&quot; under the hood. Make sure to back it up securely, e.g., by writing it down on a piece of paper: ############################## MNEMONIC ############################### cricket elephant ... ############################## MNEMONIC ############################### The Airnode address for this mnemonic is: 0xaBd9... The Airnode xpub for this mnemonic is: xpub6CUGRUo...  1 2 3 4 5 6 7 8 9 10 11 12 13 14  Verification [#] (#verification)  -----------------------------------------------------------------------------------  The xpub that the Airnode owner has announced is not verified on-chain. A sponsor can verify the xpub off-chain. Use the admin CLI command [verify-xpub] (./../reference/packages/admin-cli.html#verify-airnode-xpub) command from the admin CLI. bashnpx @api3/airnode-admin verify-airnode-xpub \\ --airnode-xpub xpub6CUGRUo... \\ --airnode-address 0xaBd9... # output Airnode xpub is: VALID  1 2 3 4 5 6 [Previous pageRequest-Response Protocol] (/reference/airnode/latest/concepts/)  [Next pageEndpoint] (/reference/airnode/latest/concepts/endpoint.html)  Released under the MIT License. Copyright ¬© 2019-present API3 "
}
