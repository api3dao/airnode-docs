{
  "id": 0,
  "distPath": "docs/.vitepress/dist/reference/airnode/latest/packages/validator.html",
  "indexPath": "docs/.vitepress/search-files/reference/airnode/latest/packages/validator.json",
  "docSet": "/reference/airnode/latest/",
  "url": "/reference/airnode/latest/packages/validator.html",
  "content": "[ Skip to content ] (#VPContent)  [![image] (/./api3-inactive.png)![image] (/./API3-Active.png)Documentation] (/)  Main Navigation [Home] (/) [Explore] (/explore/) [Guides] (/guides/)  Reference [dAPIs] (/reference/dapis/)  [Airnode] (/reference/airnode/latest/)  [ChainAPI] (/reference/chainapi/)  [OIS] (/reference/ois/latest/)  [QRNG] (/reference/qrng/)  [DAO Members] (/reference/dao-members/)  üîç  [GitHub] (https://github.com/api3dao/api3-docs) [Discord] (https://discord.com/channels/758003776174030948/765618225144266793)  Appearance [GitHub] (https://github.com/api3dao/api3-docs) [Discord] (https://discord.com/channels/758003776174030948/765618225144266793)  Menu [ Return to top ] (#)  üìÇ  Sidebar Navigation  [Versions] (/reference/airnode/latest/) [Airnode Contract Addresses] (/reference/airnode/latest/airnode-addresses.html) [Cloud Resources] (/reference/airnode/latest/cloud-resources.html) [Chain Idiosyncrasies] (/reference/airnode/latest/chain-idiosyncrasies.html) [Migration Guide] (/reference/airnode/latest/migration.html)   Understanding Airnode ---------------------  [Overview] (/reference/airnode/latest/understand/) [API Integration] (/reference/airnode/latest/understand/api-integration.html) [API Security] (/reference/airnode/latest/understand/api-security.html) [Configuring Airnode] (/reference/airnode/latest/understand/configuring.html) [Using Authorizers] (/reference/airnode/latest/understand/apply-auth.html) [Using Authorizations] (/reference/airnode/latest/understand/using-authorizations.html) [Heartbeat] (/reference/airnode/latest/understand/heartbeat.html) [HTTP Gateways] (/reference/airnode/latest/understand/http-gateways.html) [Deploying Airnode] (/reference/airnode/latest/understand/deploying.html)   Docker Images -------------  [Overview] (/reference/airnode/latest/docker/) [AWS/GCP Deployer Image] (/reference/airnode/latest/docker/deployer-image.html) [Client Image] (/reference/airnode/latest/docker/client-image.html) [Admin CLI Image] (/reference/airnode/latest/docker/admin-cli-image.html)   Concepts and Definitions ------------------------  [Request-Response Protocol] (/reference/airnode/latest/concepts/) [Airnode] (/reference/airnode/latest/concepts/airnode.html) [Endpoint] (/reference/airnode/latest/concepts/endpoint.html) [Authorizers] (/reference/airnode/latest/concepts/authorizers.html) [Authorizations] (/reference/airnode/latest/concepts/authorizations.html) [Airnode Authentication] (/reference/airnode/latest/concepts/airnode-auth.html) [Relayed Meta Data Authentication] (/reference/airnode/latest/concepts/relay-meta-auth.html) [Requester] (/reference/airnode/latest/concepts/requester.html) [Sponsor] (/reference/airnode/latest/concepts/sponsor.html) [Requests and Sponsors] (/reference/airnode/latest/concepts/requesters-sponsors.html) [Template] (/reference/airnode/latest/concepts/template.html) [Request] (/reference/airnode/latest/concepts/request.html) [Chain Providers] (/reference/airnode/latest/concepts/chain-providers.html) [Gas Price Strategies] (/reference/airnode/latest/concepts/gas-prices.html) [Fees] (/reference/airnode/latest/concepts/fees.html)   Specifications --------------  [Oracle Integration (OIS)] (/reference/airnode/latest/specifications/ois.html) [Airnode ABI] (/reference/airnode/latest/specifications/airnode-abi.html) [Reserved Parameters] (/reference/airnode/latest/specifications/reserved-parameters.html)   Packages --------  [Overview] (/reference/airnode/latest/packages/) [Adapter] (/reference/airnode/latest/packages/adapter.html) [Airnode ABI] (/reference/airnode/latest/packages/airnode-abi.html) [Admin CLI] (/reference/airnode/latest/packages/admin-cli.html) [Deployer] (/reference/airnode/latest/packages/deployer.html) [Validator] (/reference/airnode/latest/packages/validator.html)   Deployment Files ----------------  [Overview] (/reference/airnode/latest/deployment-files/) [config.json] (/reference/airnode/latest/deployment-files/config-json.html) [secrets.env] (/reference/airnode/latest/deployment-files/secrets-env.html) [aws.env] (/reference/airnode/latest/deployment-files/aws-env.html) [receipt.json] (/reference/airnode/latest/deployment-files/receipt-json.html) Examples [config.json] (/reference/airnode/latest/deployment-files/examples/config-json.html) [secrets.env] (/reference/airnode/latest/deployment-files/examples/secrets-env.html) [aws.env] (/reference/airnode/latest/deployment-files/examples/aws-env.html) Templates [OIS Object] (/reference/airnode/latest/deployment-files/templates/ois-json.html) [config.json] (/reference/airnode/latest/deployment-files/templates/config-json.html) [secrets.env] (/reference/airnode/latest/deployment-files/templates/secrets-env.html) [aws.env] (/reference/airnode/latest/deployment-files/templates/aws-env.html) [gcp.json] (/reference/airnode/latest/deployment-files/templates/gcp-json.html)  On this page Table of Contents for current page  üìÇ¬†Reference ‚Üí Airnode ‚Üí v1.0 ‚Üí Packages  Validator [#] (#frontmatter-title)  =====================================================================================  The [airnode-validator] (https://github.com/api3dao/airnode/tree/v0.8/packages/airnode-validator) is used internally by the [Docker Images] (./../../grp-providers/docker/) to validate the [configuration files] (./../../grp-providers/guides/build-an-airnode/configuring-airnode.html) you provide when deploying an Airnode. However, validator can also be used as a standalone package to verify the correctness of the configuration files without deploying the Airnode. The recommended way is to use the [validator CLI] (./validator.html#cli-usage) , but for advanced use cases you can use the [validator SDK] (./validator.html#sdk-usage) .  CLI Usage [#] (#cli-usage)  -----------------------------------------------------------------------------  The simplest way to run the CLI is using [npx] (https://www.codingninjas.com/codestudio/library/difference-between-npm-and-npx) . Alternatively, you can install the validator package as a dependency in your project. shnpx @api3/airnode-validator --config &quot;config.json&quot; --secrets &quot;secrets.env&quot;  1 alternatively sh# First install the package npm install @api3/airnode-validator # Or yarn add @api3/airnode-validator # Run the validator CLI npx airnode-validator --config &quot;config.json&quot; --secrets &quot;secrets.env&quot;  1 2 3 4 5 6 7  Examples [#] (#examples)   Assuming the configurations files inside current working directory are valid, executing: shnpx @api3/airnode-validator --config &quot;valid-config.json&quot; --secrets &quot;valid-secrets.env&quot;  1 yields: text‚úî The configuration is valid  1 When there is an error during validation, the command prints out the error and fails with a non zero status code. shnpx @api3/airnode-validator --config &quot;valid-config.json&quot; --secrets &quot;non-existent-secrets.env&quot;  1 yields: text‚úñ Unable to read secrets file at &quot;non-existent-secrets.env&quot;. Reason: Error: ENOENT: no such file or directory, open (...omitted for brevity)  1  SDK Usage [#] (#sdk-usage)  -----------------------------------------------------------------------------  The validator package contains an API that can be used to validate Airnode configuration files programatically. The following functions can be used: ---parseConfigWithSecrets(config, secrets) - Interpolates secrets into config and validates the interpolated configuration. Expects both config and secrets to be JSON objects. ---parseConfig(config) - Validates the config. Expects the config to be a JSON object. ---parseSecrets(secrets) - Validates the secrets. Expects the secrets to be a JSON object. ---parseReceipt(receipt) - Validates the receipt. Expects the receipt to be a JSON object. ---unsafeParseConfigWithSecrets(config, secrets) - Interpolates secrets into config but does not perform any validation afterwards. Use this function only when you can guarantee that the configuration is valid. Validator has also full TypeScript support. All of these functions return a typed object.  Examples [#] (#examples-1)   jsconst validator = require(&#39;@api3/airnode-validator&#39;); const dotenv = require(&#39;dotenv&#39;); const fs = require(&#39;fs&#39;); const config = JSON.parse(fs.readFileSync(&#39;config.json&#39;, &#39;utf-8&#39;)); const secrets = dotenv.parse(fs.readFileSync(&#39;secrets.env&#39;, &#39;utf-8&#39;)); const parseResult = validator.parseConfigWithSecrets(config, secrets); if (parseResult.success) { const config = parseResult.data; // ... (do something with valid &quot;config&quot;) } else { console.error(parseResult.error); }  1 2 3 4 5 6 7 8 9 10 11 12 13 14 or: tsimport * as validator from &#39;@api3/airnode-validator&#39;; import { join } from &#39;path&#39;; import dotenv from &#39;dotenv&#39;; import { readFileSync } from &#39;fs&#39;; const config = JSON.parse(readFileSync(&#39;config.json&#39;, &#39;utf-8&#39;)); const secrets = dotenv.parse(readFileSync(&#39;secrets.env&#39;, &#39;utf-8&#39;)); const parseResult = validator.parseConfigWithSecrets(config, secrets); if (parseResult.success) { const config = parseResult.data; // ... (do something with valid &quot;config&quot;) } else { console.error(parseResult.error); }  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  Build Manually [#] (#build-manually)  ---------------------------------------------------------------------------------------  See the build instruction in the package developer documentation: [https://github.com/api3dao/airnode/tree/v0.8/packages/airnode-validator] (https://github.com/api3dao/airnode/tree/v0.8/packages/airnode-validator)  [Previous pageDeployer] (/reference/airnode/latest/packages/deployer.html)  [Next pageOverview] (/reference/airnode/latest/deployment-files/)  Released under the MIT License. Copyright ¬© 2019-present API3 "
}
