{
  "id": 95,
  "distPath": "docs/.vitepress/dist/reference/airnode/latest/understand/apply-auth.html",
  "indexPath": "docs/.vitepress/search-files/reference/airnode/latest/understand/apply-auth.json",
  "docSet": "/reference/airnode/latest/",
  "url": "/reference/airnode/latest/understand/apply-auth.html",
  "content": "  ðŸ“‚Â Reference â†’ Airnode â†’ v1.0 â†’ Understanding Airnode  Using Authorizers (optional) [#] (#frontmatter-title)  ====  An Airnode can authorize smart contracts (know as requesters) access to its endpoints using [Authorizers] (./../../../concepts/authorizers.html) . This method is on-chain and requires some blockchain knowledge by an API provider. An [Authorizer] (./../../../concepts/authorizers.html) is a contract which typically checks for a single condition (&quot;has the requester made their monthly payment&quot;, &quot;is this requesterAddress whitelisted&quot;, etc.). Authorizers can be combined to enforce more complex policies. If any of the authorizers in the list gives access, the request will considered to be authorized. From a logical standpoint, the authorization outcomes get ORed. Alternative: Relayed Meta Data As an alternative to authorizers and authorizations, an API provider can use [Relayed Meta Data] (./api-security.html#relayed-meta-data-security-schemes) to authenticate a request. This approach is off-chain and requires no blockchain knowledge by the API provider. Note that it is possible to use authorizers, authorizations, and relayed meta data together. When you deploy your Airnode a receipt file is generated which contains the Airnode&#39;s airnodeAddress. Sponsors (via their sponsored requesters) use airnodeAddress and an endpointId to make requests to your Airnode&#39;s endpoints. However, you probably do not want to serve them publicly. ---Only serve your own [requester contracts] (./../../../grp-developers/requesters-sponsors.html) . ---Only serve sponsors who have made a subscription payment. ---Only serve sponsors who have gone through KYC. You can use different authorizer contracts for your Airnode deployment per chain by declaring them in the config.json file under chains[n].authorizers. Add one or more authorizer contract addresses to the chains[n].authorizers.{&lt;authorizerSchemeType&gt;} array as shown below (e.g. requesterEndpointAuthorizers). If the array is left empty then all requests will be accepted by the Airnode but still could be filtered by the another method of authorization, [Relayed Meta Data Security Schemes] (./api-security.html#relayed-meta-data-security-schemes) . json{ ... &quot;chains&quot;:[ { Scheme type requesterEndpointAuthorizers lists &quot;id&quot;: &quot;1&quot;, on-chain authorizer contract addresses ... such as RequesterAuthorizerWithAirnode &quot;authorizers&quot;: { â¬‡ï¸Ž &quot;requesterEndpointAuthorizers&quot;: [ // Requests must satisfy at least &quot;0xeabb...C123&quot;, // one of the authorizer contracts &quot;0xCE5e...1abc&quot; ] } }, { &quot;id&quot;: &quot;2&quot;, ... &quot;authorizers&quot;: { &quot;requesterEndpointAuthorizers&quot;: [] // All requests will be processed }, }, { &quot;id&quot;: &quot;3&quot;, ... &quot;authorizers&quot;: { &quot;requesterEndpointAuthorizers&quot;: [ // Requests must satisfy a &quot;0xeabb...C123&quot; // single authorizer contract ] } }, ] }  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  RequesterAuthorizerWithAirnode [#] (#requesterauthorizerwithairnode)  ----  A common use case for an authorizer is the [RequesterAuthorizerWithAirnode] (./../../../concepts/authorizers.html#requesterauthorizerwithairnode) authorizer contract developed for Airnode operators to use right out-of-the-box. It allows the whitelisting of requester contracts (with or without expiration timestamps) on a per endpoint basis. Endpoints are declared in the ois.endpoints field of the config.json file. This is the most common use case and may in fact satisfy the needs of many Airnodes. You can find the contract address of this authorizer in the [Airnode Contract Addresses] (./../../../reference/airnode-addresses.html) doc. To use the RequesterAuthorizerWithAirnode authorizer contract: 1--Add an authorizer contract address to the array for chains[n].authorizers.{&lt;authorizerContractAddress&gt;}. 2--After your Airnode is deployed, call the Admin CLI command [set-whitelist-expiration] (./../../../reference/packages/admin-cli.html#set-whitelist-expiration) to add the desired requester contract addresses to the whitelist maintained by RequesterAuthorizerWithAirnode. Once implemented, only requester contract addresses you have added to RequesterAuthorizerWithAirnode will have access to your Airnode. [Previous pageConfiguring Airnode] (/reference/airnode/latest/understand/configuring.html)  [Next pageUsing Authorizations] (/reference/airnode/latest/understand/using-authorizations.html)  "
}
