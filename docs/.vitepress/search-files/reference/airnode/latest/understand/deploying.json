{"id":97,"distPath":"docs/.vitepress/dist/reference/airnode/latest/understand/deploying.html","indexPath":"docs/.vitepress/search-files/reference/airnode/latest/understand/deploying.json","docSet":"/reference/airnode/latest/","url":"/reference/airnode/latest/understand/deploying.html","content":"  ðŸ“‚Â Reference â†’ Airnode â†’ v1.0 â†’ Understanding Airnode  Deploying Airnode [#] (#frontmatter-title)  ===  After integrating your API ( [API Integration] (./api-integration.html) ) and creating the configuration files ( [Configuring Airnode] (./configuring-airnode.html) ), the next step is to deploy the Airnode. Complete the following before deploying your Airnode. --- [API Integration] (./api-integration.html)  --- [API Security] (./api-security.html)  --- [Configuring Airnode] (./configuring-airnode.html)  --- [Using Authorizers] (./apply-auth.html) optional --- [Heartbeat] (./heartbeat.html) optional --- [HTTP Gateways] (./http-gateways.html) optional  Deploy with Docker [#] (#deploy-with-docker)    The recommended way to deploy Airnode is by using the Docker [deployer image] (./../../docker/deployer-image.html) . This image is simply a wrapper around the [deployer CLI] (https://github.com/api3dao/airnode/tree/v0.8/packages/airnode-deployer) . Try out the [Quick Deploy] (./../../tutorial/) tutorial if you wish to become familiar with the deployer image first. The deployer interacts with a cloud provider to deploy Airnode programmatically, without requiring you to click through a lot of ever-changing graphical interfaces. For it to do so, a cloud project setup and credentials are required and was discussed in [Configuring an Airnode] (./configuring-airnode.html#aws-setup-aws-deployment-only) .  Install Docker [#] (#install-docker)  --  The [deployer image] (./../../docker/deployer-image.html) is containerized as a Docker image. This will deploy the Airnode to the cloud provider without the worry of installing dependencies and is the recommended way to do a deployment. If you do not already have docker installed go to the [Docker website] (https://docs.docker.com/get-docker/) and install it.  Deployment [#] (#deployment)  ----  At this point your project should resemble the following. The config.json, secrets.env, aws.env (if deploying to AWS) and gcp.json (if deploying to GCP) files should be ready to go. Other files you may have added are expected but not used by the deployer image. @tab:AWS my-airnode â”œâ”€â”€ aws.env â”œâ”€â”€ config.json â””â”€â”€ secrets.env  1 2 3 4 @tab:GCP my-airnode â”œâ”€â”€ gcp.json â”œâ”€â”€ config.json â””â”€â”€ secrets.env  1 2 3 4 Warning about simultaneous deployments Avoid running multiple deployments simultaneously as doing so might result in a broken deployment. If this occurs, the standard removal approach may not succeed and [Manual Removal] (../../docker/deployer-image.html#manual-removal) may be required.  From the root of the project directory run the Docker image command [deploy] (./../../docker/deployer-image.html#deploy) as shown below to deploy the Airnode. When the deployment has completed a receipt.json file will be written to your current working directory, which is mounted to the /app/config directory within the container. This file contains important configuration information about the Airnode and is needed to remove the Airnode should the need arise. Normally (for Linux/Mac/WSL2) the deployer image deploy command is run by the user root. This may cause permission issues when the receipt.json file is generated. Optionally you can specify the [UID (user identifier)] (https://en.wikipedia.org/wiki/User_identifier) and [GID (group identifier)] (https://en.wikipedia.org/wiki/Group_identifier) that the deployer image should use. Do so by setting the environment variables USER_ID and GROUP_ID, otherwise omit the line containing the variables.  @tab:Linux/Mac/WSL2 shdocker run -it --rm \\ -e USER_ID=$(id -u) -e GROUP_ID=$(id -g) \\ -v &quot;$(pwd):/app/config&quot; \\ api3/airnode-deployer:0.10.0 deploy  1 2 3 4 @tab:Windows batch# For Windows, use CMD (not PowerShell). docker run -it --rm ^ -v &quot;%cd%:/app/config&quot; ^ api3/airnode-deployer:0.10.0 deploy  1 2 3 4  receipt.json [#] (#receipt-json)   The receipt.json file is a product of a deployment attempt. It contains Airnode configuration and deployment information and is used to remove the Airnode. The field success is important in that it specifies whether the deployment was successful or not. json{ &quot;airnodeWallet&quot;: { &quot;airnodeAddress&quot;: &quot;0xaBd9daAdf32fCd96eE4607bf3d5B31e19a244Cac&quot;, &quot;airnodeAddressShort&quot;: &quot;abd9daa&quot;, &quot;xpub&quot;: &quot;xpub661MyMwAqRbcGHp9uC7...vbeziJwFHuNs&quot; }, &quot;deployment&quot;: { &quot;deploymentId&quot;: &quot;aws8fd2e911&quot;, &quot;cloudProvider&quot;: { &quot;type&quot;: &quot;aws&quot;, &quot;region&quot;: &quot;us-east-1&quot; }, &quot;stage&quot;: &quot;dev&quot;, &quot;nodeVersion&quot;: &quot;0.10.0&quot;, &quot;timestamp&quot;: &quot;2022-03-26T02:37:55.506Z&quot; }, &quot;success&quot;: true }  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  Testing with HTTP Gateway [#] (#testing-with-http-gateway)  ----  If you opted to enable the HTTP Gateway it can be used to test the Airnode while bypassing the chain it was deployed to. There are three examples in other docs that detail how to do this. --- [HTTP Gateways] (./http-gateways.html#using-curl)  --- [Quick Deploy AWS] (./../../tutorial/quick-deploy-aws/#test-the-airnode)  --- [Quick Deploy GCP] (./../../tutorial/quick-deploy-gcp/#test-the-airnode)  --- [Quick Deploy Container] (./../../tutorial/quick-deploy-container/#test-the-airnode)   Calling the Airnode [#] (#calling-the-airnode)  --  Once the Airnode is deployed, see [Calling an Airnode] (./../../../grp-developers/call-an-airnode.html) to learn how requests are made to it.  Removing the Airnode [#] (#removing-the-airnode)  ----  If you would like to remove a deployed Airnode, see the Docker image commands for [remove] (./../../docker/deployer-image.html#remove) or [remove-with-receipt] (./../../docker/deployer-image.html#remove-with-receipt) instructions. [Previous pageHTTP Gateways] (/reference/airnode/latest/understand/http-gateways.html)  [Next pageOverview] (/reference/airnode/latest/docker/)  "}