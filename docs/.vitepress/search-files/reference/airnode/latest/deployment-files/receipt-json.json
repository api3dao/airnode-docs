{
  "id": 70,
  "distPath": "docs/.vitepress/dist/reference/airnode/latest/deployment-files/receipt-json.html",
  "indexPath": "docs/.vitepress/search-files/reference/airnode/latest/deployment-files/receipt-json.json",
  "docSet": "/reference/airnode/latest/",
  "url": "/reference/airnode/latest/deployment-files/receipt-json.html",
  "content": "  ðŸ“‚Â Reference â†’ Airnode â†’ v1.0 â†’ Deployment Files  receipt.json [#] (#frontmatter-title)  ===  A receipt.json file is outputted after each deployment and contains non-sensitive information about the deployment. The main use of a receipt file is to remove an Airnode deployment when no longer needed. See the [Airnode Removal documentation] (./../packages/deployer.html) for usage and commands. It also provides the Airnode xpub for the hardened derivation path m/44&#39;/60&#39;/0&#39; that must be announced off-chain in order for sponsors to derive their designated sponsor wallet. This wallet will then be used by the Airnode to fulfill each request made by the requester contracts. ---airnodeWallet: address and xpub information ---deployment: Airnode configuration and timestamp of deployment ---success: specifies whether the deployment was successful or not A receipt.json file is created for both a AWS or GCP deployment. A receipt is not generated for client deployments (deploying to a Docker container). @tab:AWS json{ &quot;airnodeWallet&quot;: { &quot;airnodeAddress&quot;: &quot;0xA30CA71Ba54E83127214D3271aEA8F5D6bD4Dace&quot;, &quot;airnodeAddressShort&quot;: &quot;a30ca71&quot;, &quot;airnodeXpub&quot;: &quot;xpub6C8tvRgYkjNVaGMtpyZf4deBcUQHf7vgWUraVxY6gYiZhBYbPkFkLLWJzUUeVFdkKpVtatmXHX8kB76xgfmTpVZWbVWdq1rneaAY6a8RtbY&quot; }, &quot;deployment&quot;: { &quot;deploymentId&quot;: &quot;awsef86dfad&quot;, &quot;cloudProvider&quot;: { &quot;type&quot;: &quot;aws&quot;, &quot;region&quot;: &quot;us-east-1&quot;, &quot;disableConcurrencyReservations&quot;: false }, &quot;stage&quot;: &quot;starter-example&quot;, &quot;nodeVersion&quot;: &quot;0.10.0&quot;, &quot;timestamp&quot;: &quot;2022-03-26T02:37:55.506Z&quot; }, &quot;success&quot;: true }  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 @tab:GCP json{ &quot;airnodeWallet&quot;: { &quot;airnodeAddress&quot;: &quot;0xAcCc602FA6d1dD57cE11559Fe0c07895396a7359&quot;, &quot;airnodeAddressShort&quot;: &quot;accc602&quot;, &quot;airnodeXpub&quot;: &quot;xpub6C6wfzZ8EptS8Ti2xZgukJFWkgBcFY2ygU4BDTTGtR2GmX3vvrx3YFat3i1XLfwvhtiCEty1GZnV1MSCKBBt7uYKBbrHaqWvP623w9jUNhW&quot; }, &quot;deployment&quot;: { &quot;deploymentId&quot;: &quot;gcpbecf1982&quot;, &quot;cloudProvider&quot;: { &quot;type&quot;: &quot;gcp&quot;, &quot;region&quot;: &quot;us-east4&quot;, &quot;disableConcurrencyReservations&quot;: false, &quot;projectId&quot;: &quot;api3-753118&quot; }, &quot;stage&quot;: &quot;dev&quot;, &quot;nodeVersion&quot;: &quot;0.10.0&quot;, &quot;timestamp&quot;: &quot;2022-03-26T02:37:55.506Z&quot; }, &quot;success&quot;: true }  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 [Previous pageaws.env] (/reference/airnode/latest/deployment-files/aws-env.html)  [Next pageconfig.json] (/reference/airnode/latest/deployment-files/examples/config-json.html)  "
}
