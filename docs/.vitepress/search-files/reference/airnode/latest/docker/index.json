{
  "id": 83,
  "distPath": "docs/.vitepress/dist/reference/airnode/latest/docker/index.html",
  "indexPath": "docs/.vitepress/search-files/reference/airnode/latest/docker/index.json",
  "docSet": "/reference/airnode/latest/",
  "url": "/reference/airnode/latest/docker/index.html",
  "content": "  ðŸ“‚Â Reference â†’ Airnode â†’ v1.0 â†’ Docker Images  Overview [#] (#frontmatter-title)  ====  Using Docker is the easiest way to both deploy an Airnode to a cloud provider and to run an Airnode locally. There are two Docker images: the Airnode deployer image and the Airnode client image. There is also a docker image wrapping the admin CLI package, as an alternative to using npx. To use these images first install [Docker] (https://docs.docker.com/get-docker/) if it is not present on your system. If using a Linux distribution that enforces Selinux policies, allow the Docker images access to the host directory by [creating an appropriate rule] (https://stackoverflow.com/questions/24288616/permission-denied-on-accessing-host-directory-in-docker) . The [deployer image] (./deployer-image.html) deploys the node in the form of serverless functions to a serverless cloud provider (e.g. AWS Lambda). The [client image] (./client-image.html) is the node itself, containerized. The container can be run locally or deployed to a cloud hosting service (e.g. AWS EC2 or Lightsail). The [admin CLI image] (./admin-cli-image.html) wraps the admin CLI package in a docker image to provide an alternative usage option to the Admin CLI commands (npx).  DockerHub [#] (#dockerhub)  --  All images are available on DockerHub, see the links below. It is not required to download these manually as they are pulled automatically when running the provided Docker desktop commands.  --- [AWS/GCP Deployer Images ] (https://hub.docker.com/r/api3/airnode-deployer/tags) âžš  --- [Client Images ] (https://hub.docker.com/r/api3/airnode-client/tags) âžš  --- [Admin CLI Images ] (https://hub.docker.com/r/api3/airnode-admin/tags) âžš  All image versions must pair with the [ nodeVersion ] () from your Airnode config.json file. However there is a latest image version provided for convenience which always requires the highest nodeVersion found in the config.json file at the time of its execution.  [Previous pageDeploying Airnode] (/reference/airnode/latest/understand/deploying.html)  [Next pageAWS/GCP Deployer Image] (/reference/airnode/latest/docker/deployer-image.html)  "
}
