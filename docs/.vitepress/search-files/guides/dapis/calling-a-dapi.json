{
  "id": 0,
  "distPath": "docs/.vitepress/dist/guides/dapis/calling-a-dapi.html",
  "indexPath": "docs/.vitepress/search-files/guides/dapis/calling-a-dapi.json",
  "docSet": "/guides/",
  "url": "/guides/dapis/calling-a-dapi.html",
  "content": "[ Skip to content ] (#VPContent)  [![image] (/./api3-inactive.png)![image] (/./API3-Active.png)Documentation] (/)  Main Navigation [Home] (/) [Explore] (/explore/) [Guides] (/guides/)  Reference [dAPIs] (/reference/dapis/)  [Airnode] (/reference/airnode/latest/)  [ChainAPI] (/reference/chainapi/)  [OIS] (/reference/ois/latest/)  [QRNG] (/reference/qrng/)  [DAO Members] (/reference/dao-members/)  üîç  [GitHub] (https://github.com/api3dao/api3-docs) [Discord] (https://discord.com/channels/758003776174030948/765618225144266793)  Appearance [GitHub] (https://github.com/api3dao/api3-docs) [Discord] (https://discord.com/channels/758003776174030948/765618225144266793)  Menu [ Return to top ] (#)  üìÇ  Sidebar Navigation  [About the Guides] (/guides/)   dAPIS -----  [‚òÖ Getting Started] (/guides/dapis/) [Calling a dAPI] (/guides/dapis/calling-a-dapi.html) [Starter Project] (/guides/dapis/starter-project.html)   Airnode -------  [‚òÖ Getting Started] (/guides/airnode/) [Quick Start AWS] (/guides/airnode/quick-start-aws/) [Quick Start GCP] (/guides/airnode/deploy-gcp.html) [Quick Start Docker Container] (/guides/airnode/deploy-container.html) [Making an RRP Request] (/guides/airnode/rrp-request.html) [Using RRP Templates] (/guides/airnode/using-rrp-templates.html) [Monorepo Examples] (/guides/airnode/monorepo-examples.html)   ChainAPI --------  [‚òÖ Getting Started] (/guides/chainapi/) [Integrate your API] (/guides/chainapi/integrate.html) [Deploy an API Integration] (/guides/chainapi/deploy.html)   QRNG ----  [‚òÖ Getting Started] (/guides/qrng/) [QRNG Example] (/guides/qrng/qrng-example.html) [Remix Example] (/guides/qrng/remix-example.html) [Youtube QRNG-NFT Example] (/guides/qrng/youtube-nft-example.html)   DAO Members -----------  [‚òÖ Getting Started] (/guides/dao-members/) [Staking Tokens] (/guides/dao-members/staking.html) [Working with Proposals] (/guides/dao-members/proposals.html) [How to Vote] (/guides/dao-members/voting.html) [Videos] (/guides/dao-members/videos.html)  On this page Table of Contents for current page  üìÇ¬†Guides ‚Üí dAPIs  Calling a dAPI [#] (#frontmatter-title)  ==========================================================================================  Use the DapiServer contract to access dAPIs on-chain. There are four functions within DapiServer that can be called to get dAPI values. The more common ones use a human readable name. ---readDataFeedWithDapiName(\\_dapiName) - returns a value and timestamp ---readDataFeedValueWithDapiName(\\_dapiName) - returns only the value Follow-up tips Starting here add information and highlight content from the video so the reader does not need to go back to the video to get at important code snippets.  DapiServer [#] (#dapiserver)  -------------------------------------------------------------------------------  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. @tab:DapiServer solidityimport &quot;@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiServer.sol&quot;; ... // Calling the ETH/USD dAPI with the DapiServer contract address. (value, timestamp) = IDapiServer(_dapiServerContractAddress).readDataFeedWithDapiName(&quot;ETH/USD&quot;);  1 2 3 4 5 @tab:Smart Contractr solidityimport &quot;@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiServer.sol&quot;; ... // Calling the ETH/USD dAPI with the DapiServer contract address. (value, timestamp) = IDapiServer(_dapiServerContractAddress).readDataFeedWithDapiName(&quot;ETH/USD&quot;);  1 2 3 4 5 [Previous page‚òÖ Getting Started] (/guides/dapis/)  [Next pageStarter Project] (/guides/dapis/starter-project.html)  Released under the MIT License. Copyright ¬© 2019-present API3 "
}
